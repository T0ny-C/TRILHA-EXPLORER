
* {
 margin: 0;
 padding: 0;
 box-sizing: border-box;/* tamanho da caixa */
}

ul {
  list-style: none; /* definindo que o tipo de lista é nenhum */ 
}

body {
  background-image: url(./imagens/Fundo.jpg); /* url é uma funcção em css e dentro dos parentese digo o argumento que vou usar  */
  background-position: top center ;
  background-size: 100%  auto; /* definido a imagem background em cem por cento a sua horizontalidade; e o auto é a imagem automatica ,no caso a altura vai ficar automatica */
  background-repeat: no-repeat;/* essa propriedade define quantas vezes o background vai se repetir  */
  background-color: #121214;
}

body * {
  font-family: 'Inter', sans-serif;
  line-height: 160%;/* definido a altura da linha */
}

 /* main * {/* quando usamos asterico mais um elemento estamos selecionando essa tag mais seus filhos que estão incluidas dentro delas 
  border: 1px solid red;
} 
*/

header {
  padding-top: 32px;
  height: calc(120px + 32px);
}

header div {
  width: 120px;
  margin: auto;
  background-image: linear-gradient(90deg, #9572FC 0%, #43E7AD 50.52%, #E2D45C 100%);
  border-radius: 50%;
  display: flex;
  padding: 4px;
  transition: transform .4s ; /* este comando recebe duas propriedades a primeira é  o nome da transição que eu quero e a segunda é a duração de quanto tempo vai durar a transição */
}

header div:hover {/* quando ppassar o mouse em cima vai acontecer: */
  transform: scale(1.1); /*mudar a escala do elemento   */
}

header div img {
  width: 100%; /* cem por cento em relação a div nesse caso*/
  border-radius: 50%;
}

main {
  max-width: 580px; /* definindo a largura máxima do card */
  width: 90%;/* definindo que a ocupação da tela quando for menor que 580 nesse caso */
  margin: 32px auto;/* preenchimento automatico pela lateral da tela para centralizar */


  display: flex; /* ele deixaria cada caixa uma do laudo da outra, mas com a proriedade column fica do tipo coluna (uma abaixo da outra  */ 
  flex-direction: column; /* alterando a direção da caixa pra o tipo coluna nesse caso */
  gap: 24px;/* espaço que fica entre as caixas internas */
  margin-top: 32px;
}

section {
  color: white;
  background-image: linear-gradient(90deg, #9572FC 0%, #43E7AD 50.52%, #E2D45C 100%);
  padding-top: 4px;
  border-radius: 10px;
}

section div {
 background: #2A2634; 
  padding: 24px 32px 32px 32px;
  border-radius: 8px;
}

section h2 {
font-weight: 900;
font-size: 24px;
letter-spacing: -0.47px;
}

section p {
font-weight: 400;
font-size: 16px;
line-height: 160%;
letter-spacing: -0.18px;
color: #A1A1AA;
}

section ul {
  display: flex;
  flex-wrap: wrap;/* este comando indica que quando houver mais counteudo ele jogar pra baixo e não pra lateral fazedno com que não aumente o tamanho da caixa e se couber ele vai ajustando */
  gap: 16px;

  margin-top: 24px;
}

section ul li {
  transition: transform .3s ;
}

section ul li:hover{
  transform: scale(1.3);
}

.listaGames img { /* a imagem dentro da tag id vai ficar com as seguintes configurações*/ 
  width: 90px;
  border-radius: 8px;
}

.listaCanais img {
  border-radius: 50% ;
  width: 70px;
  border: 1px solid #443E54;
}

/* ANIMAÇÕES */

header div {
  animation: fromTop .7 s 0.8s backwards ;/* essa animation recebe duas propriedades a primera nome da animação e a segunda tempo de duração, a terceira é o delay, ouseja, o tempo que ele vai carregar para mostrar o conteudo 
  animation-delay: 0.8s backwards ;é o delay, ouseja, o tempo que ele vai carregar para mostrar o conteudo */
}

main section {
  animation: fromBottom .7 backwards ;
}

main section:nth-child(1){
  animation-delay: 0;
}

main section:nth-child(2){
  animation-delay: .4s;
}

main section:nth-child(3){
  animation-delay: .8s;
}

@keyframes fromTop{
  from{
    opacity: 0;/* nivel de opacidade zerado*/
    transform: translateY(-40px); /*começa de cima*/
  }
  to{
    opacity: 1;/* opacidade termina com 100% em baixo */
    transform: translateY(0)/* termina em baixo */
  }
}

main section {
  animation: fromBottom .4s;
}

@keyframes  fromBottom {
  from {
    opacity: 0;
    transform: translateX(-30px); /*começa de cima*/

  }
  to {
    opacity: 1;/* opacidade termina com 100% em baixo */
    transform: translateX(0)/* termina em baixo */

  }
}